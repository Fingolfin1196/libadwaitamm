/* Copyright (c) 2019  Roger Ferrer <rofirrim@gmail.com>
 *
 * This file is part of libadwaitamm.
 *
 * libadwaitamm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * libadwaitamm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(libadwaitamm,libadwaita)
_CONFIGINCLUDE(libadwaitammconfig.h)
_PINCLUDE(glibmm/private/object_p.h)

#include <glibmm.h>
#include <gtkmm.h>
#include <libadwaitamm/animationtarget.h>

namespace Adw
{

class Animation : public Glib::Object {
  _CLASS_GOBJECT(Animation, AdwAnimation, ADW_ANIMATION, Glib::Object, GObject)

protected:
  _CTOR_DEFAULT

public:
  _WRAP_ENUM(State, AdwAnimationState)

  _WRAP_CREATE()

  _WRAP_METHOD(Animation::State get_state() const, adw_animation_get_state)
  _WRAP_METHOD(double get_value() const, adw_animation_get_value)
  _WRAP_METHOD(Glib::RefPtr<AnimationTarget> get_target() const, adw_animation_get_target, refreturn)
  _WRAP_METHOD(Gtk::Widget* get_widget() const, adw_animation_get_widget)
  _WRAP_METHOD(void pause(), adw_animation_pause)
  _WRAP_METHOD(void play(), adw_animation_play)
  _WRAP_METHOD(void reset(), adw_animation_reset)
  _WRAP_METHOD(void resume(), adw_animation_resume)
  _WRAP_METHOD(void set_target(Glib::RefPtr<AnimationTarget> target), adw_animation_set_target)
  _WRAP_METHOD(void skip(), adw_animation_skip)

  _WRAP_PROPERTY("state", Animation::State)
  _WRAP_PROPERTY("target", Glib::RefPtr<AnimationTarget>)
  _WRAP_PROPERTY("value", double)
  _WRAP_PROPERTY("widget", Gtk::Widget*)

  _WRAP_SIGNAL(void done(), "done", no_default_handler)
};

} // namespace Adw
