/* Copyright (c) 2019  Roger Ferrer <rofirrim@gmail.com>
 *
 * This file is part of libadwaitamm.
 *
 * libadwaitamm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * libadwaitamm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm.h>
#include <libadwaita-1/adwaita.h>

namespace Adw
{ 
static void CallbackAnimationTarget::callback_function(double value,
                                                       gpointer user_data) {
  auto the_slot = static_cast<SlotTarget>(user_data);
  try {
    (*the_slot)(value);
  } catch (...) {
    Glib::exception_handlers_invoke();
  }
}

CallbackAnimationTarget::CallbackAnimationTarget(const SlotTarget &slot_target)
    : Glib::Object(nullptr), Adw::AnimationTarget() {

  auto slot_copy = new SlotTarget(slot_target);

  gobj()->callback = callback_function;
  gobj()->user_data = slot_copy;
  gobj()->destroy_notify = Glib::destroy_notify<SlotTarget>;
}

} // namespace Adw
