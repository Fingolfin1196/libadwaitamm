/* Copyright (c) 2019  Roger Ferrer <rofirrim@gmail.com>
 *
 * This file is part of libadwaitamm.
 *
 * libadwaitamm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * libadwaitamm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(libadwaitamm,libadwaita)
_CONFIGINCLUDE(libadwaitammconfig.h)
_PINCLUDE(gtkmm/private/window_p.h)

#include <gtkmm.h>

namespace Adw
{
  _WRAP_ENUM(ResponseAppearance, AdwResponseAppearance)

class MessageDialog : public Gtk::Window {
  _CLASS_GTKOBJECT(MessageDialog, AdwMessageDialog, ADW_MESSAGE_Dialog, Gtk::Window, GtkWindow)
  _UNMANAGEABLE

public:
  _WRAP_CTOR(MessageDialog(Gtk::Window* transient_for, const Glib::ustring& heading, const Glib::ustring& body), adw_message_dialog_new)

  _WRAP_METHOD(void add_response(const Glib::ustring& id, const Glib::ustring& label), adw_message_dialog_add_response)
  _WRAP_METHOD(Glib::ustring get_body() const, adw_message_dialog_get_body)
  _WRAP_METHOD(bool get_body_use_markup() const, adw_message_dialog_get_body_use_markup)
  _WRAP_METHOD(Glib::ustring get_close_response() const, adw_message_dialog_get_close_response)
  _WRAP_METHOD(Glib::ustring get_default_response() const, adw_message_dialog_get_default_response)
  _WRAP_METHOD(Gtk::Widget* get_extra_child() const, adw_message_dialog_get_extra_child)
  _WRAP_METHOD(Glib::ustring get_heading() const, adw_message_dialog_get_heading)
  _WRAP_METHOD(bool get_heading_use_markup() const, adw_message_dialog_get_heading_use_markup)
  _WRAP_METHOD(ResponseAppearance get_response_appearance(const Glib::ustring& response) const, adw_message_dialog_get_response_appearance)
  _WRAP_METHOD(bool get_response_enabled(const Glib::ustring& response) const, adw_message_dialog_get_response_enabled)
  _WRAP_METHOD(Glib::ustring get_response_label(const Glib::ustring& response) const, adw_message_dialog_get_response_label)
  _WRAP_METHOD(bool has_response(const Glib::ustring& response) const, adw_message_dialog_has_response)
  _WRAP_METHOD(void response(const Glib::ustring& response), adw_message_dialog_response)
  _WRAP_METHOD(void set_body(const Glib::ustring& body), adw_message_dialog_set_body)
  _WRAP_METHOD(void set_body_use_markup(bool use_markup), adw_message_dialog_set_body_use_markup)
  _WRAP_METHOD(void set_close_response(const Glib::ustring& response), adw_message_dialog_set_close_response)
  _WRAP_METHOD(void set_default_response(const Glib::ustring& response), adw_message_dialog_set_default_response)
  _WRAP_METHOD(void set_extra_child(Gtk::Widget* child), adw_message_dialog_set_extra_child)
  _WRAP_METHOD(void set_heading(const Glib::ustring& heading), adw_message_dialog_set_heading)
  _WRAP_METHOD(void set_heading_use_markup(bool use_markup), adw_message_dialog_set_heading_use_markup)
  _WRAP_METHOD(void set_response_appearance(const Glib::ustring& response, ResponseAppearance appearance), adw_message_dialog_set_response_appearance)
  _WRAP_METHOD(void set_response_enabled(const Glib::ustring& response, bool enabled), adw_message_dialog_set_response_enabled)
  _WRAP_METHOD(void set_response_label(const Glib::ustring& response, const Glib::ustring& label), adw_message_dialog_set_response_label)

 _WRAP_PROPERTY("body", Glib::ustring)
 _WRAP_PROPERTY("body-use-markup", bool)
 _WRAP_PROPERTY("close-response", Glib::ustring)
 _WRAP_PROPERTY("default-response", Glib::ustring)
 _WRAP_PROPERTY("extra-child", Gtk::Widget*)
 _WRAP_PROPERTY("heading", Glib::ustring)
 _WRAP_PROPERTY("heading-use-markup", bool)

 _WRAP_SIGNAL(void response(const Glib::ustring& response), "response", detail_name response)

 _WRAP_VFUNC(void response(const Glib::ustring& response), response)

 _IGNORE(adw_message_dialog_add_responses)
 _IGNORE(adw_message_dialog_format_body)
 _IGNORE(adw_message_dialog_format_body_markup)
 _IGNORE(adw_message_dialog_format_heading)
 _IGNORE(adw_message_dialog_format_heading_markup)

};

} // namespace Adw
