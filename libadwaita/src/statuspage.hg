/* Copyright (c) 2019  Roger Ferrer <rofirrim@gmail.com>
 *
 * This file is part of libadwaitamm.
 *
 * libadwaitamm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * libadwaitamm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(libadwaitamm,libadwaita)
_CONFIGINCLUDE(libadwaitammconfig.h)
_PINCLUDE(gtkmm/private/widget_p.h)

#include <gtkmm.h>

// The documentation explicitly advises against this.
// But G_DECLARE_FINAL_TYPE seems to do struct { ... } Foo; which means we
// cannot forward-declare a struct type Foo.
#include <libadwaita-1/adwaita.h>

namespace Adw
{

class StatusPage : public Gtk::Widget {
  _CLASS_GTKOBJECT(StatusPage, AdwStatusPage, ADW_STATUS_PAGE, Gtk::Widget, GtkWidget)
  _STRUCT_NOT_HIDDEN
  _DO_NOT_DERIVE_GTYPE

public:
  _CTOR_DEFAULT

  _WRAP_METHOD(Gtk::Widget* get_child() const, adw_status_page_get_child)
  _WRAP_METHOD(Glib::ustring get_description() const, adw_status_page_get_description)
  _WRAP_METHOD(Glib::ustring get_icon_name() const, adw_status_page_get_icon_name)
  _WRAP_METHOD(Glib::RefPtr<Gdk::Paintable> get_paintable() const, adw_status_page_get_paintable, refreturn)
  _WRAP_METHOD(Glib::ustring get_title() const, adw_status_page_get_title)
  _WRAP_METHOD(void set_child(Gtk::Widget *child), adw_status_page_set_child)
  _WRAP_METHOD(void set_description(const Glib::ustring& description), adw_status_page_set_description)
  _WRAP_METHOD(void set_icon_name(const Glib::ustring& description), adw_status_page_set_icon_name)
  _WRAP_METHOD(void set_paintable(const Glib::RefPtr<Gdk::Paintable>& paintable), adw_status_page_set_paintable)
  _WRAP_METHOD(void set_title(const Glib::ustring& title), adw_status_page_set_title)

  _WRAP_PROPERTY("child", Gtk::Widget*)
  _WRAP_PROPERTY("description", Glib::ustring)
  _WRAP_PROPERTY("icon-name", Glib::ustring)
  _WRAP_PROPERTY("paintable", Glib::RefPtr<Gdk::Paintable>)
  _WRAP_PROPERTY("title", Glib::ustring)
};

} // namespace Adw
